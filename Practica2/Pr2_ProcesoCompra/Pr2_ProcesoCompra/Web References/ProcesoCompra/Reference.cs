//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Pr2_ProcesoCompra.ProcesoCompra {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AlmacenSOAP", Namespace="http://www.example.org/Almacen/")]
    public partial class AlmacenSOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback comprobarStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AlmacenSOAP() {
            this.Url = global::Pr2_ProcesoCompra.Properties.Settings.Default.Pr2_ProcesoCompra_ProcesoCompra_Almacen;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event comprobarStockCompletedEventHandler comprobarStockCompleted;
        
        /// <remarks/>
        public event actualizarStockCompletedEventHandler actualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Almacen/comprobarStock", RequestNamespace="http://www.example.org/Almacen/", ResponseNamespace="http://www.example.org/Almacen/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("mensaje", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string comprobarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool funca) {
            object[] results = this.Invoke("comprobarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            funca = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void comprobarStockAsync(string referenciaProducto, int numeroUnidades) {
            this.comprobarStockAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void comprobarStockAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.comprobarStockOperationCompleted == null)) {
                this.comprobarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OncomprobarStockOperationCompleted);
            }
            this.InvokeAsync("comprobarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.comprobarStockOperationCompleted, userState);
        }
        
        private void OncomprobarStockOperationCompleted(object arg) {
            if ((this.comprobarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.comprobarStockCompleted(this, new comprobarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Almacen/actualizarStock", RequestNamespace="http://www.example.org/Almacen/", ResponseNamespace="http://www.example.org/Almacen/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("mensaje", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string actualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] out bool funca) {
            object[] results = this.Invoke("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            funca = ((bool)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades) {
            this.actualizarStockAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.actualizarStockOperationCompleted == null)) {
                this.actualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarStockOperationCompleted);
            }
            this.InvokeAsync("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.actualizarStockOperationCompleted, userState);
        }
        
        private void OnactualizarStockOperationCompleted(object arg) {
            if ((this.actualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarStockCompleted(this, new actualizarStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Proveedor3SOAP", Namespace="http://www.example.org/Proveedor3/")]
    public partial class Proveedor3SOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback solicitarPresupuestoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ordenarCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Proveedor3SOAP() {
            this.Url = global::Pr2_ProcesoCompra.Properties.Settings.Default.Pr2_ProcesoCompra_ProcesoCompra_Proveedor3;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event solicitarPresupuestoCompletedEventHandler solicitarPresupuestoCompleted;
        
        /// <remarks/>
        public event ordenarCompraCompletedEventHandler ordenarCompraCompleted;
        
        /// <remarks/>
        public event actualizarStockCompletedEventHandler1 actualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor3/solicitarPresupuesto", RequestNamespace="http://www.example.org/Proveedor3/", ResponseNamespace="http://www.example.org/Proveedor3/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("precio", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float solicitarPresupuesto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("solicitarPresupuesto", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void solicitarPresupuestoAsync(string referenciaProducto, int numeroUnidades) {
            this.solicitarPresupuestoAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void solicitarPresupuestoAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.solicitarPresupuestoOperationCompleted == null)) {
                this.solicitarPresupuestoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsolicitarPresupuestoOperationCompleted);
            }
            this.InvokeAsync("solicitarPresupuesto", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.solicitarPresupuestoOperationCompleted, userState);
        }
        
        private void OnsolicitarPresupuestoOperationCompleted(object arg) {
            if ((this.solicitarPresupuestoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.solicitarPresupuestoCompleted(this, new solicitarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor3/ordenarCompra", RequestNamespace="http://www.example.org/Proveedor3/", ResponseNamespace="http://www.example.org/Proveedor3/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ordenado", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ordenarCompra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("ordenarCompra", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ordenarCompraAsync(string referenciaProducto, int numeroUnidades) {
            this.ordenarCompraAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void ordenarCompraAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.ordenarCompraOperationCompleted == null)) {
                this.ordenarCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnordenarCompraOperationCompleted);
            }
            this.InvokeAsync("ordenarCompra", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.ordenarCompraOperationCompleted, userState);
        }
        
        private void OnordenarCompraOperationCompleted(object arg) {
            if ((this.ordenarCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ordenarCompraCompleted(this, new ordenarCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor3/actualizarStock", RequestNamespace="http://www.example.org/Proveedor3/", ResponseNamespace="http://www.example.org/Proveedor3/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("actualiza", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool actualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades) {
            this.actualizarStockAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.actualizarStockOperationCompleted == null)) {
                this.actualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarStockOperationCompleted);
            }
            this.InvokeAsync("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.actualizarStockOperationCompleted, userState);
        }
        
        private void OnactualizarStockOperationCompleted(object arg) {
            if ((this.actualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarStockCompleted(this, new actualizarStockCompletedEventArgs1(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Proveedor1SOAP", Namespace="http://www.example.org/Proveedor1/")]
    public partial class Proveedor1SOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback solicitarPresupuestoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ordenarCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Proveedor1SOAP() {
            this.Url = global::Pr2_ProcesoCompra.Properties.Settings.Default.Pr2_ProcesoCompra_ProcesoCompra_Proveedor1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event solicitarPresupuestoCompletedEventHandler solicitarPresupuestoCompleted;
        
        /// <remarks/>
        public event ordenarCompraCompletedEventHandler ordenarCompraCompleted;
        
        /// <remarks/>
        public event actualizarStockCompletedEventHandler1 actualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor1/solicitarPresupuesto", RequestNamespace="http://www.example.org/Proveedor1/", ResponseNamespace="http://www.example.org/Proveedor1/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("precio", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float solicitarPresupuesto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("solicitarPresupuesto", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void solicitarPresupuestoAsync(string referenciaProducto, int numeroUnidades) {
            this.solicitarPresupuestoAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void solicitarPresupuestoAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.solicitarPresupuestoOperationCompleted == null)) {
                this.solicitarPresupuestoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsolicitarPresupuestoOperationCompleted);
            }
            this.InvokeAsync("solicitarPresupuesto", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.solicitarPresupuestoOperationCompleted, userState);
        }
        
        private void OnsolicitarPresupuestoOperationCompleted(object arg) {
            if ((this.solicitarPresupuestoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.solicitarPresupuestoCompleted(this, new solicitarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor1/ordenarCompra", RequestNamespace="http://www.example.org/Proveedor1/", ResponseNamespace="http://www.example.org/Proveedor1/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ordenado", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ordenarCompra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("ordenarCompra", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ordenarCompraAsync(string referenciaProducto, int numeroUnidades) {
            this.ordenarCompraAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void ordenarCompraAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.ordenarCompraOperationCompleted == null)) {
                this.ordenarCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnordenarCompraOperationCompleted);
            }
            this.InvokeAsync("ordenarCompra", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.ordenarCompraOperationCompleted, userState);
        }
        
        private void OnordenarCompraOperationCompleted(object arg) {
            if ((this.ordenarCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ordenarCompraCompleted(this, new ordenarCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor1/actualizarStock", RequestNamespace="http://www.example.org/Proveedor1/", ResponseNamespace="http://www.example.org/Proveedor1/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("actualiza", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool actualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades) {
            this.actualizarStockAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.actualizarStockOperationCompleted == null)) {
                this.actualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarStockOperationCompleted);
            }
            this.InvokeAsync("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.actualizarStockOperationCompleted, userState);
        }
        
        private void OnactualizarStockOperationCompleted(object arg) {
            if ((this.actualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarStockCompleted(this, new actualizarStockCompletedEventArgs1(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Proveedor2SOAP", Namespace="http://www.example.org/Proveedor2/")]
    public partial class Proveedor2SOAP : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback solicitarPresupuestoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ordenarCompraOperationCompleted;
        
        private System.Threading.SendOrPostCallback actualizarStockOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Proveedor2SOAP() {
            this.Url = global::Pr2_ProcesoCompra.Properties.Settings.Default.Pr2_ProcesoCompra_ProcesoCompra_Proveedor2;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event solicitarPresupuestoCompletedEventHandler solicitarPresupuestoCompleted;
        
        /// <remarks/>
        public event ordenarCompraCompletedEventHandler ordenarCompraCompleted;
        
        /// <remarks/>
        public event actualizarStockCompletedEventHandler1 actualizarStockCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor2/solicitarPresupuesto", RequestNamespace="http://www.example.org/Proveedor2/", ResponseNamespace="http://www.example.org/Proveedor2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("precio", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public float solicitarPresupuesto([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("solicitarPresupuesto", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((float)(results[0]));
        }
        
        /// <remarks/>
        public void solicitarPresupuestoAsync(string referenciaProducto, int numeroUnidades) {
            this.solicitarPresupuestoAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void solicitarPresupuestoAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.solicitarPresupuestoOperationCompleted == null)) {
                this.solicitarPresupuestoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsolicitarPresupuestoOperationCompleted);
            }
            this.InvokeAsync("solicitarPresupuesto", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.solicitarPresupuestoOperationCompleted, userState);
        }
        
        private void OnsolicitarPresupuestoOperationCompleted(object arg) {
            if ((this.solicitarPresupuestoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.solicitarPresupuestoCompleted(this, new solicitarPresupuestoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor2/ordenarCompra", RequestNamespace="http://www.example.org/Proveedor2/", ResponseNamespace="http://www.example.org/Proveedor2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ordenado", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool ordenarCompra([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("ordenarCompra", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ordenarCompraAsync(string referenciaProducto, int numeroUnidades) {
            this.ordenarCompraAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void ordenarCompraAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.ordenarCompraOperationCompleted == null)) {
                this.ordenarCompraOperationCompleted = new System.Threading.SendOrPostCallback(this.OnordenarCompraOperationCompleted);
            }
            this.InvokeAsync("ordenarCompra", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.ordenarCompraOperationCompleted, userState);
        }
        
        private void OnordenarCompraOperationCompleted(object arg) {
            if ((this.ordenarCompraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ordenarCompraCompleted(this, new ordenarCompraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.example.org/Proveedor2/actualizarStock", RequestNamespace="http://www.example.org/Proveedor2/", ResponseNamespace="http://www.example.org/Proveedor2/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("actualiza", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public bool actualizarStock([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string referenciaProducto, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] int numeroUnidades) {
            object[] results = this.Invoke("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades) {
            this.actualizarStockAsync(referenciaProducto, numeroUnidades, null);
        }
        
        /// <remarks/>
        public void actualizarStockAsync(string referenciaProducto, int numeroUnidades, object userState) {
            if ((this.actualizarStockOperationCompleted == null)) {
                this.actualizarStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnactualizarStockOperationCompleted);
            }
            this.InvokeAsync("actualizarStock", new object[] {
                        referenciaProducto,
                        numeroUnidades}, this.actualizarStockOperationCompleted, userState);
        }
        
        private void OnactualizarStockOperationCompleted(object arg) {
            if ((this.actualizarStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.actualizarStockCompleted(this, new actualizarStockCompletedEventArgs1(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ProcesoCompraBinding", Namespace="http://procesocompra.bpel.mtis")]
    public partial class ProcesoCompraBinding : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback processOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ProcesoCompraBinding() {
            this.Url = global::Pr2_ProcesoCompra.Properties.Settings.Default.Pr2_ProcesoCompra_ProcesoCompra_ProcesoCompraService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event processCompletedEventHandler processCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://procesocompra.bpel.mtis/process", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("ProcesoCompraResponse", Namespace="http://procesocompra.bpel.mtis")]
        public ProcesoCompraResponse process([System.Xml.Serialization.XmlElementAttribute(Namespace="http://procesocompra.bpel.mtis")] ProcesoCompraRequest ProcesoCompraRequest) {
            object[] results = this.Invoke("process", new object[] {
                        ProcesoCompraRequest});
            return ((ProcesoCompraResponse)(results[0]));
        }
        
        /// <remarks/>
        public void processAsync(ProcesoCompraRequest ProcesoCompraRequest) {
            this.processAsync(ProcesoCompraRequest, null);
        }
        
        /// <remarks/>
        public void processAsync(ProcesoCompraRequest ProcesoCompraRequest, object userState) {
            if ((this.processOperationCompleted == null)) {
                this.processOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessOperationCompleted);
            }
            this.InvokeAsync("process", new object[] {
                        ProcesoCompraRequest}, this.processOperationCompleted, userState);
        }
        
        private void OnprocessOperationCompleted(object arg) {
            if ((this.processCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processCompleted(this, new processCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://procesocompra.bpel.mtis")]
    public partial class ProcesoCompraRequest {
        
        private string referenciaField;
        
        private int cantidadField;
        
        /// <comentarios/>
        public string referencia {
            get {
                return this.referenciaField;
            }
            set {
                this.referenciaField = value;
            }
        }
        
        /// <comentarios/>
        public int cantidad {
            get {
                return this.cantidadField;
            }
            set {
                this.cantidadField = value;
            }
        }
    }
    
    /// <comentarios/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1590.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://procesocompra.bpel.mtis")]
    public partial class ProcesoCompraResponse {
        
        private bool funcionaField;
        
        /// <comentarios/>
        public bool funciona {
            get {
                return this.funcionaField;
            }
            set {
                this.funcionaField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void comprobarStockCompletedEventHandler(object sender, comprobarStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class comprobarStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal comprobarStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool funca {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void actualizarStockCompletedEventHandler(object sender, actualizarStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class actualizarStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal actualizarStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool funca {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void solicitarPresupuestoCompletedEventHandler(object sender, solicitarPresupuestoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class solicitarPresupuestoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal solicitarPresupuestoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public float Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((float)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void ordenarCompraCompletedEventHandler(object sender, ordenarCompraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ordenarCompraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ordenarCompraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void actualizarStockCompletedEventHandler1(object sender, actualizarStockCompletedEventArgs1 e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class actualizarStockCompletedEventArgs1 : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal actualizarStockCompletedEventArgs1(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    public delegate void processCompletedEventHandler(object sender, processCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1590.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class processCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal processCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProcesoCompraResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProcesoCompraResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591